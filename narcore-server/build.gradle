buildscript {
    ext.kotlin_version = '1.4.32'
    ext.ktor_version = '1.5.4'
    ext.mokk_version = "1.12.0"

    repositories {
        mavenCentral()
        maven { url = uri("https://plugins.gradle.org/m2/") }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}


plugins {
    id 'org.jetbrains.kotlin.jvm'
}
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'

group 'com.narbase.narcore'
def versionNumber = 1

mainClassName = "com.narbase.narcore.main.MainKt"

sourceCompatibility = 1.8
kotlin { experimental { coroutines "enable" } }

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
    jcenter()

}

dependencies {
    implementation(project(":dto-web"))
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
    implementation 'org.jetbrains.exposed:exposed-core:0.22.1'
    implementation 'org.jetbrains.exposed:exposed-dao:0.22.1'
    implementation 'org.jetbrains.exposed:exposed-jdbc:0.22.1'
    implementation 'org.jetbrains.exposed:exposed-jodatime:0.22.1'
    implementation('org.postgresql:postgresql:42.2.5')
    implementation('com.zaxxer:HikariCP:3.1.0')
    implementation("io.ktor:ktor-auth:$ktor_version")
    implementation("io.ktor:ktor-auth-jwt:$ktor_version")
    implementation("io.ktor:ktor-gson:$ktor_version")
    implementation("io.ktor:ktor-network:$ktor_version")
    implementation("io.ktor:ktor-websockets:$ktor_version")
    implementation("io.ktor:ktor-server-jetty:$ktor_version")
    implementation("io.ktor:ktor-client-apache:$ktor_version")
    implementation("io.ktor:ktor-client-gson:$ktor_version")
    implementation("io.ktor:ktor-serialization:$ktor_version")
    implementation("ch.qos.logback:logback-classic:1.2.1")
    implementation('org.postgresql:postgresql:42.2.5')

    implementation("org.jetbrains.kotlinx:kotlinx-html-jvm:0.6.12")
    implementation 'com.sun.mail:javax.mail:1.5.5'

    testImplementation("io.ktor:ktor-server-test-host:$ktor_version")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.0")
    testImplementation("org.assertj:assertj-core:3.11.1")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.6.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.0")
    testImplementation("io.mockk:mockk:$mokk_version")
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions {
        languageVersion = "1.4"
        freeCompilerArgs = ["-XXLanguage:+InlineClasses"]
    }
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform()
}
sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
}

jar {
    manifest {
        attributes "Main-Class": "com.narbase.narcore.main.MainKt"
        attributes "Class-Path": "."
    }


    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/version.properties").withWriter { w ->
            Properties p = new Properties()
            p['versionName'] = project.version.toString()
            p['versionNumber'] = versionNumber.toString()
            p.store w, null
        }
    }
}

classes {
    dependsOn createProperties
}